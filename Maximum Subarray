class Solution:
    # @param A, a list of integers
    # @return an integer
    def maxSubArray(self, A):
        if A == None:
            return None
        maxconresult = A[0]
        sumcon = 0
        for i in range(len(A)):
            if sumcon >= 0:
                sumcon += A[i]
            else:
                sumcon = A[i]
            maxconresult = max(maxconresult,sumcon )
        return maxconresult
    
4、DP解法的具体方程：@ flyinghearts：设sum[i] 为前i个元素中，包含第i个元素且和最大的连续子数组，result 为已找到的子数组中和最大的。对第i+1个元素有两种选择：做为新子数组的第一个元素、放入前面找到的子数组。
sum[i+1] = max(a[i+1], sum[i] + a[i+1])
result = max(result, sum[i])
 

扩展：
1、如果数组是二维数组，同样要你求最大子数组的和列?
2、如果是要你求子数组的最大乘积列?
3、如果同时要求输出子段的开始和结束列?
