Given an array of integers, every element appears twice except for one. Find that single one.

Note:
Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?

Python
class Solution:
    # @param A, a list of integer
    # @return an integer
    def singleNumber(self, A):
        if len(A) == 0:
            return NULL
        else:
            result=A[0]
            if len(A) > 1:
                for i in range(1,len(A)):
                    result ^= A[i]
            return result
                
